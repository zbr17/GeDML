metrics:
  - default: moco.yaml

collectors:
  - collector: MoCoCollector.yaml

selectors:
  - selector: DefaultSelector.yaml

losses:
  - loss: CrossEntropyLoss.yaml

models:
  - trunk: mocov2_resnet50.yaml
  - embedder: mocov2_embedder.yaml

evaluators:
  - default: Calculator.yaml

optimizers:
  - trunk: SGD_models.yaml
  - embedder: SGD_models.yaml

schedulers:
  - trunk: cosine_annealing_lr.yaml
  - embedder: cosine_annealing_lr.yaml

gradclipper:
  - trunk: gradclipper_models.yaml
  - embedder: gradclipper_models.yaml

transforms:
  - train: mocov2_train_transforms.yaml
  - test: mocov2_eval_transforms.yaml

datasets:
  - train: imagenet_train.yaml
  - test: imagenet_test.yaml

recorders:
  - default: base_recorder.yaml

trainers: 
  - default: BaseTrainer.yaml

testers:
  - default: BaseTester.yaml

managers:
  - default: BaseManager.yaml

LINK_SETTING: 
  to_device_list: [models, collectors]
  to_wrap_list: [models]

PIPELINE_SETTING:
  models:
    trunk:
      input: [data]
      output: [data]
      map: 
        models/embedder: [0]
    embedder:
      input: [data]
      output: [embeddings]
      map:
        collectors/collector: [0]
  collectors:
    collector:
      input: [embeddings]
      output: [metric_mat, row_labels, col_labels, is_same_source]
      map:
        selectors/selector: [0,1,2,3]
  selectors:
    selector:
      input: [metric_mat, row_labels, col_labels, is_same_source]
      output: [metric_mat, row_labels, col_labels, is_same_source, indices_tuple, weight]
      map:
        losses/loss: [0,1,2,3,4,5]
  losses:
    loss:
      input: [metric_mat, row_labels, col_labels, indices_tuple, weights, is_same_source]
      output: [loss]
      map:
        FINISH/default->cross_entropy_loss: [0]

